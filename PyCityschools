# Dependencies and Setup
import pandas as pd
import numpy as np

# File to Load (Remember to Change These)
school_data_to_load = "Resources/schools_complete.csv"
student_data_to_load = "Resources/students_complete.csv"

# Read School and Student Data File and store into Pandas Data Frames
school_data = pd.read_csv(school_data_to_load)
student_data = pd.read_csv(student_data_to_load)

# Combine the data into a single dataset
school_data_complete = pd.merge(student_data, school_data, how="left", on=["school_name", "school_name"])

# Calculate the total number of schools
totalSchools = school_data_complete["school_name"].nunique()
# Calculate the total number of students
totalStudents = school_data_complete["Student ID"].nunique()
# Calculate the total budget
totalBudget = school_data["budget"].sum()
# Calculate the average math score
averageMathScore = school_data_complete["math_score"].mean()
# Calculate the average reading score
averageReadingScore = school_data_complete["reading_score"].mean()
# Calculate the percentage of students with a passing math score (70 or greater)
passingMath = len(school_data_complete[school_data_complete["math_score"] >= 70])
percentagePassingMath = passingMath / totalStudents * 100
# Calculate the percentage of students with a passing reading score (70 or greater)
passingReading = len(school_data_complete[school_data_complete["reading_score"] >= 70])
percentagePassingReading = passingReading / totalStudents * 100
# Calculate the overall passing rate (overall average score), i.e. (avg. math score + avg. reading score)/2
percentageOverallPassingRate = (averageMathScore + averageReadingScore) / 2

# Create a dataframe to hold the above results
district_summary_df = pd.DataFrame({
    "Total Schools": [totalSchools],
    "Total Students": [totalStudents],
    "Total Budget": [totalBudget],
    "Average Math Score": [averageMathScore],
    "Average Reading Score": [averageReadingScore],
    "% Passing Math": [percentagePassingMath],
    "% Passing Reading": [percentagePassingReading],
    "% Overall Passing Rate": [percentageOverallPassingRate]
})

# Optional: give the displayed data cleaner formatting
district_summary_df["Total Budget"] = district_summary_df["Total Budget"].map("${:,.2f}".format)

district_summary_df[["Total Schools",
      "Total Students",
      "Total Budget",
      "Average Math Score",
      "Average Reading Score",
      "% Passing Math",
      "% Passing Reading",
      "% Overall Passing Rate"]]
      
      
Total Schools	Total Students	Total Budget	Average Math Score	Average Reading Score	% Passing Math	% Passing Reading	% Overall Passing Rate
	15	           39170	     $24,649,428.00	78.985371	              81.87784	          74.980853	         85.805463	     80.431606
  
  # Create an overview table that summarizes key metrics about each school
# School Name
grouped_school_df = school_data_complete.groupby(["school_name"])
# School Type
schoolType = grouped_school_df["type"].first()
# Total Students
totalStudents = grouped_school_df["Student ID"].count()
# Total School Budget
totalSchoolBudget = grouped_school_df["budget"].first()
# Per Student Budget
perStudentBudget = totalSchoolBudget / totalStudents
# Average Math Score
averageMathScore = grouped_school_df["math_score"].mean()
# Average Reading Score
averageReadingScore = grouped_school_df["reading_score"].mean()
# % Passing Math
passingMath = school_data_complete[school_data_complete["math_score"] >= 70].groupby(["school_name"])["math_score"].count()
percentagePassingMath = passingMath / totalStudents * 100
# % Passing Reading
passingRead = school_data_complete[school_data_complete["reading_score"] >= 70].groupby(["school_name"])["reading_score"].count()
percentagePassingReading = passingRead / totalStudents * 100
# Overall Passing Rate (Average of the above two)
percentageOverallPassingRate = (percentagePassingMath + percentagePassingReading) / 2

# Create a dataframe to hold the above results
school_summary_df = pd.DataFrame({"School Type": schoolType,
      "Total Students": totalStudents,
      "Total School Budget": totalSchoolBudget,
      "Per Student Budget": perStudentBudget,
      "Average Math Score": averageMathScore,
      "Average Reading Score": averageReadingScore,
      "% Passing Math": percentagePassingMath,
      "% Passing Reading": percentagePassingReading,
      "% Overall Passing Rate": percentageOverallPassingRate})

# Sort and display the top five schools in overall passing rate
school_summary_df = school_summary_df.sort_values(["% Overall Passing Rate"], ascending=False)

# Optional: give the displayed data cleaner formatting
school_summary_df["Total School Budget"] = school_summary_df["Total School Budget"].map("${:,.2f}".format)
school_summary_df["Per Student Budget"] = school_summary_df["Per Student Budget"].map("${:,.2f}".format)

school_summary_df[["School Type",
      "Total Students",
      "Total School Budget",
      "Per Student Budget",
      "Average Math Score",
      "Average Reading Score",
      "% Passing Math",
      "% Passing Reading",
      "% Overall Passing Rate"]].head()
      
   	School            Type	Total Students	  Total School Budget	Per Student Budget	Average Math Score	Average Reading Score	% Passing Math	% Passing Reading	% Overall Passing Rate 								
Cabrera High School	Charter	1858	              $1,081,356.00        	$582.00	           83.061895	          83.975780	         94.133477	       97.039828	          95.586652
Thomas High School	Charter	1635	              $1,043,130.00	        $638.00	           83.418349	          83.848930	         93.272171	       97.308869	          95.290520
Pena High School	  Charter	 962	              $585,858.00         	$609.00	           83.839917	          84.044699	         94.594595	       95.945946	          95.270270
Griffin High School	Charter	1468	             $917,500.00	          $625.00	           83.351499	          83.816757	         93.392371	       97.138965	          95.265668
Wilson High School	Charter	2283	            $1,319,574.00	          $578.00	           83.274201	          83.989488	         93.867718	       96.539641	          95.203679

# Sort and display the five worst-performing schools
school_summary_df = school_summary_df.sort_values(["% Overall Passing Rate"], ascending=True)

school_summary_df[["School Type",
      "Total Students",
      "Total School Budget",
      "Per Student Budget",
      "Average Math Score",
      "Average Reading Score",
      "% Passing Math",
      "% Passing Reading",
      "% Overall Passing Rate"]].head()
      
                    School Type	Total Students	Total School Budget	Per Student Budget	Average Math Score	Average Reading Score	% Passing Math	% Passing Reading	% Overall Passing Rate 								
Rodriguez High School	District	    3999	         $2,547,363.00	      $637.00	           76.842711	            80.744686	        66.366592	       80.220055	        73.293323
Figueroa High School	District	    2949	        $1,884,411.00	        $639.00	           76.711767	            81.158020	        65.988471	       80.739234	        73.363852
Huang High School	   District	      2917	        $1,910,635.00	        $655.00	           76.629414	            81.182722	        65.683922	       81.316421	        73.500171
Johnson High School	 District	     4761	          $3,094,650.00       	$650.00	           77.072464	            80.966394	        66.057551	       81.222432	        73.639992
Ford High School	   District	     2739	          $1,763,916.00	        $644.00	           77.102592	            80.746258	        68.309602	       79.299014	        73.804308


# Create a table that lists the average Math Score for students of each grade level (9th, 10th, 11th, 12th) at each school.
# Create a pandas series for each grade. Hint: use a conditional statement.
# Group each series by school
grade9th_ds = school_data_complete.loc[school_data_complete["grade"] == "9th"].groupby(["school_name"])["math_score"].mean()
grade10th_ds = school_data_complete.loc[school_data_complete["grade"] == "10th"].groupby(["school_name"])["math_score"].mean()
grade11th_ds = school_data_complete.loc[school_data_complete["grade"] == "11th"].groupby(["school_name"])["math_score"].mean()
grade12th_ds = school_data_complete.loc[school_data_complete["grade"] == "12th"].groupby(["school_name"])["math_score"].mean()

# Combine the series into a dataframe
grade_summary_df = pd.DataFrame({"9th": grade9th_ds,
      "10th": grade10th_ds,
      "11th": grade11th_ds,
      "12th": grade12th_ds})

grade_summary_df[["9th", "10th", "11th", "12th"]]
                                     
	                     9th	      10th	    11th	   12th
school_name				
Bailey High School	  77.083676	76.996772	77.515588	76.492218
Cabrera High School 	83.094697	83.154506	82.765560	83.277487
Figueroa High School	76.403037	76.539974	76.884344	77.151369
Ford High School	    77.361345	77.672316	76.918058	76.179963
Griffin High School	  82.044010	84.229064	83.842105	83.356164
Hernandez High School	77.438495	77.337408	77.136029	77.186567
Holden High School	  83.787402	83.429825	85.000000	82.855422
Huang High School	    77.027251	75.908735	76.446602	77.225641
Johnson High School	  77.187857	76.691117	77.491653	76.863248
Pena High School	    83.625455	83.372000	84.328125	84.121547
Rodriguez High School	76.859966	76.612500	76.395626	77.690748
Shelton High School	  83.420755	82.917411	83.383495	83.778976
Thomas High School	  83.590022	83.087886	83.498795	83.497041
Wilson High School	  83.085578	83.724422	83.195326	83.035794
Wright High School	  83.264706	84.010288	83.836782	83.644986

# Create a table that lists the average Math Score for students of each grade level (9th, 10th, 11th, 12th) at each school.
# Create a pandas series for each grade. Hint: use a conditional statement.
# Group each series by school
grade9th_ds2 = school_data_complete.loc[school_data_complete["grade"] == "9th"].groupby(["school_name"])["reading_score"].mean()
grade10th_ds2 = school_data_complete.loc[school_data_complete["grade"] == "10th"].groupby(["school_name"])["reading_score"].mean()
grade11th_ds2 = school_data_complete.loc[school_data_complete["grade"] == "11th"].groupby(["school_name"])["reading_score"].mean()
grade12th_ds2 = school_data_complete.loc[school_data_complete["grade"] == "12th"].groupby(["school_name"])["reading_score"].mean()

# Combine the series into a dataframe
grade_summary_df2 = pd.DataFrame({"9th": grade9th_ds2,
      "10th": grade10th_ds2,
      "11th": grade11th_ds2,
      "12th": grade12th_ds2})

grade_summary_df2[["9th", "10th", "11th", "12th"]]

	                        9th	    10th	    11th	   12th
school_name				
Bailey High School	  81.303155	80.907183	80.945643	80.912451
Cabrera High School	  83.676136	84.253219	83.788382	84.287958
Figueroa High School	81.198598	81.408912	80.640339	81.384863
Ford High School	    80.632653	81.262712	80.403642	80.662338
Griffin High School	  83.369193	83.706897	84.288089	84.013699
Hernandez High School	80.866860	80.660147	81.396140	80.857143
Holden High School	  83.677165	83.324561	83.815534	84.698795
Huang High School	    81.290284	81.512386	81.417476	80.305983
Johnson High School	  81.260714	80.773431	80.616027	81.227564
Pena High School	    83.807273	83.612000	84.335938	84.591160
Rodriguez High School	80.993127	80.629808	80.864811	80.376426
Shelton High School	  84.122642	83.441964	84.373786	82.781671
Thomas High School	  83.728850	84.254157	83.585542	83.831361
Wilson High School	  83.939778	84.021452	83.764608	84.317673
Wright High School	  83.833333	83.812757	84.156322	84.073171

# Sample bins. Feel free to create your own bins.
spending_bins = [0, 585, 615, 645, 675]
group_names = ["<$585", "$585-615", "$615-645", "$645-675"]

# Create a table that breaks down school performances based on average Spending Ranges (Per Student)
# Convert Per Student Budget back to float from string 
school_summary_df["Per Student Budget"] = school_summary_df["Per Student Budget"].apply(lambda x: x.replace('$', '').replace(',', '')).astype('float')
# Reset Index in group by "school name"
school_summary_df = school_summary_df.reset_index()
# Add Spending Ranges by Bins
school_summary_df["Spending Ranges (Per Student)"] = pd.cut(school_summary_df["Per Student Budget"], spending_bins, labels=group_names)
# Groupby Spending ranges
grouped_spend_df = school_summary_df.groupby(["Spending Ranges (Per Student)"])              
# Calculate the values for the data table
spending_summary_df = grouped_spend_df.mean()

# Display Summary
spending_summary_df[["Average Math Score",
                    "Average Reading Score",
                    "% Passing Math",
                    "% Passing Reading",
                    "% Overall Passing Rate"]]
                    
                            	Average Math Score	Average Reading Score	% Passing Math	% Passing Reading	% Overall Passing Rate
Spending Ranges (Per Student)					
<$585	                           83.455399	           83.933814	         93.460096	      96.610877	       95.035486
$585-615	                       83.599686	           83.885211	         94.230858	      95.900287	       95.065572
$615-645	                       79.079225	           81.891436	         75.668212	      86.106569	       80.887391
$645-675	                       76.997210	           81.027843	         66.164813	      81.133951	       73.649382

# Sample bins. Feel free to create your own bins.
size_bins = [0, 1000, 2000, 5000]
group_names = ["Small (<1000)", "Medium (1000-2000)", "Large (2000-5000)"]

# Create a table that breaks down school performances based on school size
# Reset Index in group by "Spending Ranges (Per Student)"
school_summary_df = school_summary_df.reset_index()
# Add Spending Ranges by Bins
school_summary_df["School Size"] = pd.cut(school_summary_df["Total Students"], size_bins, labels=group_names)
# Groupby Spending ranges
grouped_size_df = school_summary_df.groupby(["School Size"])   
# Calculate the values for the data table
size_summary_df = grouped_size_df.mean()

# Display Summary
size_summary_df[["Average Math Score",
                "Average Reading Score",
                "% Passing Math",
                "% Passing Reading",
                "% Overall Passing Rate"]]
                
                  	Average Math Score	Average Reading Score	% Passing Math	% Passing Reading	% Overall Passing Rate
School Size					
Small (<1000)	      83.821598	               83.929843	         93.550225	      96.099437	       94.824831
Medium (1000-2000)	83.374684	               83.864438	         93.599695	      96.790680	       95.195187
Large (2000-5000)	  77.746417	               81.344493	         69.963361	      82.766634	       76.364998


# Create a table that breaks down school performances based on school size
# Reset Index in group by "Spending Ranges (Per Student)"
school_summary_df = school_summary_df.reset_index()
# Groupby Spending ranges
grouped_type_df = school_summary_df.groupby(["School Type"])              
# Calculate the values for the data table
type_summary_df = grouped_type_df.mean()

# Display Summary
type_summary_df[["Average Math Score",
                "Average Reading Score",
                "% Passing Math",
                "% Passing Reading",
                "% Overall Passing Rate"]]
                
                
             Average Math Score	Average Reading Score	% Passing Math	% Passing Reading	% Overall Passing Rate
School Type					
Charter	         83.473852	         83.896421	        93.620830	        96.586489	        95.103660
District	       76.956733	         80.966636	        66.548453	        80.799062	        73.673757
